#!/bin/bash

# This script was authored by chatGPT o1-preview
# https://chatgpt.com/share/6729344b-6c00-8012-bb7c-be1fd77e0287

# Initialize variables
human_readable=false

# Parse options
while getopts ":h" opt; do
  case ${opt} in
    h )
      human_readable=true
      ;;
    \? )
      echo "Usage: $0 [-h] remote branch"
      exit 1
      ;;
  esac
done
shift $((OPTIND -1))

# Check that we have exactly two positional arguments
if [ "$#" -ne 2 ]; then
    echo "Usage: $0 [-h] remote branch"
    exit 1
fi

remote=$1
branch=$2

# Check if the remote exists
if ! git remote | grep -Fxq "$remote"; then
    echo "Error: Remote '$remote' does not exist."
    exit 1
fi

# Fetch from the remote
git fetch "$remote" >/dev/null 2>&1

# Check if the branch exists in the remote
if ! git ls-remote --heads "$remote" "$branch" | grep -q .; then
    echo "Error: Branch '$branch' does not exist in remote '$remote'."
    exit 1
fi

# Get the merge base
merge_base=$(git merge-base HEAD "$remote/$branch")
if [ -z "$merge_base" ]; then
    echo "Error: Could not find merge base between HEAD and $remote/$branch."
    exit 1
fi

range="${merge_base}..HEAD"

# Compute the size
size=$(echo "$range" | git pack-objects --revs --thin --stdout -q | wc -c)

if $human_readable; then
    # Convert size to human-readable format
    if command -v numfmt >/dev/null 2>&1; then
        size_hr=$(numfmt --to=iec-i --suffix=B "$size")
    else
        size_hr=$(awk -v s="$size" 'function human(x) {
            if (x<1024) return x "B";
            x/=1024;
            s="KMGTPEZY";
            for(i=1;x>=1024 && i<=length(s);i++) x/=1024;
            return sprintf("%.1f%siB", x, substr(s,i,1));
        }
        END{print human(s)}')
    fi
    echo "$size_hr"
else
    echo "$size"
fi

